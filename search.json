[{"path":"https://skgithub14.github.io/sdtmdates/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 sdtmdates authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://skgithub14.github.io/sdtmdates/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stephen Knapp. Author, maintainer.","code":""},{"path":"https://skgithub14.github.io/sdtmdates/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Knapp S (2023). sdtmdates: Transform Impute Dates SDTM. https://github.com/skgithub14/sdtmdates, https://skgithub14.github.io/sdtmdates/.","code":"@Manual{,   title = {sdtmdates: Transform and Impute Dates for SDTM},   author = {Stephen Knapp},   year = {2023},   note = {https://github.com/skgithub14/sdtmdates, https://skgithub14.github.io/sdtmdates/}, }"},{"path":"https://skgithub14.github.io/sdtmdates/index.html","id":"sdtmdates-","dir":"","previous_headings":"","what":"Transform and Impute Dates for SDTM","title":"Transform and Impute Dates for SDTM","text":"goal {sdtmdates} provide set tools statistical programmers transform raw electronic data cut (EDC) dates ISO 8601 formatted dates Study Data Tabulation Model (SDTM) data sets. tools include utility functions reshaping, trimming, imputing date values.","code":""},{"path":"https://skgithub14.github.io/sdtmdates/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Transform and Impute Dates for SDTM","text":"can install development version {sdtmdates} GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"skgithub14/sdtmdates\")"},{"path":"https://skgithub14.github.io/sdtmdates/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Transform and Impute Dates for SDTM","text":"example, start data frame two columns, one full dates one partial dates. goal consolidate dates one ISO 8601 formatted date column. First, re-arrange partial dates format full dates using reshape_pdates(). let us combine full partial dates one column MM/DD/YYYY format. , using reshape_adates(), convert dates YYYY-MM-DD format. situations missing date elements removed, use trim_dates() function. imputed dates needed, use impute_pdates() function. start end dates can imputed using standard imputation rules.","code":"library(sdtmdates) library(dplyr) library(knitr)  raw_dates <- data.frame(   raw_full = c(     rep(NA, 8),     \"02/05/2017\",     \"02-05-2017\"   ),   raw_partial = c(     \"UN-UNK-UNKN\",      \"UN/UNK/UNKN\",     \"UN UNK UNKN\",     \"UN-UNK-2017\",     \"UN-Feb-2017\",     \"05-FEB-2017\",     \"05-UNK-2017\",     \"05-Feb-UNKN\",     rep(NA, 2)   ) ) kable(raw_dates) working_dates <- raw_dates %>%   mutate(     partial = reshape_pdates(raw_partial),     all = coalesce(raw_full, partial),     all = reshape_adates(all)   ) kable(working_dates) trimmed_dates <-  mutate(working_dates, trimmed = trim_dates(all)) kable(trimmed_dates) imputed_dates <- working_dates %>%   mutate(     start = impute_pdates(all, ptype = \"start\"),     end = impute_pdates(all, ptype = \"end\")   ) kable(imputed_dates)"},{"path":"https://skgithub14.github.io/sdtmdates/reference/impute_pdates.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute start or end dates — impute_pdates","title":"Impute start or end dates — impute_pdates","text":"Partial dates format UNKN-UN-UN combination characters numbers (ie 2017-UN-UN). Dates information converted NA. start dates, missing days assumed first month missing months assumed January. end dates, missing days assumed last day month missing months assumed December.","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/impute_pdates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute start or end dates — impute_pdates","text":"","code":"impute_pdates(dates, ptype, input_sep = \"-\")"},{"path":"https://skgithub14.github.io/sdtmdates/reference/impute_pdates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute start or end dates — impute_pdates","text":"dates character vector partial dates (also contain full dates) format YYYY-MM-DD ptype string either \"start\" \"end\" indicating whether start end dates imputed, respectively input_sep character separates date components dates, default \"-\"","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/impute_pdates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute start or end dates — impute_pdates","text":"date vector imputed dates format YYYY-MM-DD","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/impute_pdates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute start or end dates — impute_pdates","text":"","code":"dates <- c(   \"UNKN-UN-UN\",   \"2017-UN-UN\",   \"2017-02-UN\",   \"2017-UN-05\",   \"2017-09-03\",   \"UNKN-07-14\",   NA ) impute_pdates(dates, ptype = \"start\") #> [1] NA           \"2017-01-01\" \"2017-02-01\" \"2017-01-05\" \"2017-09-03\" #> [6] NA           NA           impute_pdates(dates, ptype = \"end\") #> [1] NA           \"2017-12-31\" \"2017-02-28\" \"2017-12-05\" \"2017-09-03\" #> [6] NA           NA"},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_adates.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape format of all dates (full and partial) — reshape_adates","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"Re-arranges full partial dates general form \"MM/DD/YYYY\" ISO 8601 format (\"YYYY-MM-DD\"). function appropriate vectors mixed full partial dates convert partial dates NA occur used .Date(\"02/UN/2017\", format = \"%m/%d/%Y\").","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_adates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"","code":"reshape_adates(dates)"},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_adates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"dates character vector full /partial dates","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_adates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"character vector full /partial dates format \"YYYY-MM-DD\"","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_adates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"date component separator input vector dates can character.","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_adates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"","code":"dates <- c(\"02/05/2017\", \"UN/UN/2017\", \"02-05-2017\", NA) reshape_adates(dates) #> [1] \"2017-02-05\" \"2017-UN-UN\" \"2017-02-05\" NA"},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_pdates.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape format of partial dates — reshape_pdates","title":"Reshape format of partial dates — reshape_pdates","text":"Re-arranges partial dates format \"UN-UNK-UNKN\" (\"DD-MMM-YYYY\") \"UN/UN/UNKN\" (\"MM/DD/YYYY\").","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_pdates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape format of partial dates — reshape_pdates","text":"","code":"reshape_pdates(dates, output_sep = \"/\")"},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_pdates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape format of partial dates — reshape_pdates","text":"dates character vector partial dates output_sep date component separate output, default \"/\"","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_pdates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape format of partial dates — reshape_pdates","text":"character vector partial dates format \"UN/UN/UNKN\" (\"MM/DD/YYYY\")","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_pdates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reshape format of partial dates — reshape_pdates","text":"separator character dates components input vector dates can commonly used date separator (\"/\", \"-\", \".\", \" \"). starting format, month (\"UNK\") three letter abbreviation , output format, month converted number output format character vector, Date vector, make common SDTM date workflow operations easier case input month abbreviation matter; \"Feb\", \"feb\", \"FEB\" yield results","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/reshape_pdates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape format of partial dates — reshape_pdates","text":"","code":"dates <- c(  \"UN-UNK-UNKN\",  \"UN/UNK/UNKN\",  \"UN-UNK-2017\",  \"UN-Feb-2017\",  \"05-Feb-2017\",  \"05-UNK-2017\",  \"05-Feb-UNKN\",  NA ) reshape_pdates(dates) #> [1] \"UN/UN/UNKN\" \"UN/UN/UNKN\" \"UN/UN/2017\" \"02/UN/2017\" \"02/05/2017\" #> [6] \"UN/05/2017\" \"02/05/UNKN\" NA"},{"path":"https://skgithub14.github.io/sdtmdates/reference/sdtmdates-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sdtmdates: Transform and Impute Dates for SDTM — sdtmdates-package","title":"sdtmdates: Transform and Impute Dates for SDTM — sdtmdates-package","text":"Statistical programmers required transform data snapshots electronic data cut (EDC) Clinical Data Interchange Standards Consortium (CDSIC) Study Data Tabulation Model (SDTM) compliant data sets per guidelines SDTM Implementation Guide (SDTMIG). sdtmdates provides utility functions statistical programmers convert full partial dates SDTMIG compliant dates.","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmdates/reference/sdtmdates-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sdtmdates: Transform and Impute Dates for SDTM — sdtmdates-package","text":"Maintainer: Stephen Knapp stephen@knappconsultingllc.com (ORCID)","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/trim_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim unknown elements in partial dates — trim_dates","title":"Trim unknown elements in partial dates — trim_dates","text":"Trims \"2017-UN-UN\" \"2017\" trims \"2017-05-UN\" \"2017-05\". Values \"UNKN-UN-UN\" converted NA. Values month day known converted just year, ie \"2017-UN-01\" converts \"2017\". Full dates modified.","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/trim_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim unknown elements in partial dates — trim_dates","text":"","code":"trim_dates(dates, input_sep = \"-\")"},{"path":"https://skgithub14.github.io/sdtmdates/reference/trim_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim unknown elements in partial dates — trim_dates","text":"dates character vector partial dates format \"UNKN-UN-UN\" (\"YYYY-MM-DD\"); full dates can also included input_sep character separates date components input vector dates, default \"-\"","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/trim_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim unknown elements in partial dates — trim_dates","text":"character vector trimmed partial dates full dates","code":""},{"path":"https://skgithub14.github.io/sdtmdates/reference/trim_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trim unknown elements in partial dates — trim_dates","text":"","code":"dates <- c(   \"UNKN-UN-UN\",   \"2017-UN-UN\",   \"2017-02-UN\",   \"2017-UN-05\",   \"2017-09-03\",   \"UNKN-07-14\",   NA ) trim_dates(dates) #> [1] NA           \"2017\"       \"2017-02\"    \"2017\"       \"2017-09-03\" #> [6] NA           NA"},{"path":"https://skgithub14.github.io/sdtmdates/news/index.html","id":"sdtmdates-0009000","dir":"Changelog","previous_headings":"","what":"sdtmdates 0.0.0.9000","title":"sdtmdates 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
